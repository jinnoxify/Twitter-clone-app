{"version":3,"sources":["Components/SidebarOption.js","firebase.js","Components/Sidebar.js","StateProvider.js","Components/TweetBox.js","Components/Posts.js","Components/Feed.js","Components/Widgets.js","Components/Login.js","Components/Login2.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["SidebarOption","active","text","Icon","className","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Sidebar","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","classes","React","modalStyle","open","setOpen","body","style","Avatar","src","onChange","e","target","value","type","placeholder","Button","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","variant","fullWidth","Modal","onClose","aria-labelledby","aria-describedby","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","TweetBox","user","Posts","forwardRef","ref","console","log","alt","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","index","key","Widgets","tweetId","sourceType","screenName","options","height","url","via","Login","dispatch","history","useHistory","email","setEmail","password","setPassword","setUsername","Input","createUserWithEmailAndPassword","then","authUser","updateProfile","push","catch","error","alert","message","unsubscribe","onAuthStateChanged","FormControl","InputLabel","FormHelperText","id","signInWithEmailAndPassword","Login2","htmlFor","href","App","exact","path","component","render","Boolean","window","location","hostname","match","state","action","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed02e098.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SidebarOption.css'\r\n\r\nfunction SidebarOption({active, text, Icon}) {\r\n    return (\r\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n            <Icon />\r\n            <h2>{text}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCYh-2Y4o3kRwI8ehS0pglv8mKCCAwA_qU\",\r\n  authDomain: \"twitter-clone-app-ab9f9.firebaseapp.com\",\r\n  databaseURL: \"https://twitter-clone-app-ab9f9.firebaseio.com\",\r\n  projectId: \"twitter-clone-app-ab9f9\",\r\n  storageBucket: \"twitter-clone-app-ab9f9.appspot.com\",\r\n  messagingSenderId: \"942381561108\",\r\n  appId: \"1:942381561108:web:ff6e9c5390beeb2bcabe01\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default db;\r\n","import React, { useState } from 'react'\r\nimport './Sidebar.css'\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport SidebarOption from './SidebarOption';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { Button, Avatar } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport db from '../firebase';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Sidebar() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState('')\r\n\r\n    const sendTweet = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").add({\r\n            displayName: \"Juan\",\r\n            username: \"Juandlc\",\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar: 'https://pbs.twimg.com/profile_images/1192095716694528000/5uMBSWPV_400x400.jpg'\r\n        });\r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n\r\n        setOpen(false)\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className='tweetBox'>\r\n                <form>\r\n                    <div className=\"tweetBox__input\">\r\n                        <Avatar src='https://pbs.twimg.com/profile_images/1192095716694528000/5uMBSWPV_400x400.jpg' />\r\n                        <input\r\n                            onChange={(e) => setTweetMessage(e.target.value)}\r\n                            value={tweetMessage}\r\n                            type='text'\r\n                            placeholder=\"What's happening?\"\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        value={tweetImage}\r\n                        onChange={(e) => setTweetImage(e.target.value)}\r\n                        className=\"tweetBox__imageInput\"\r\n                        placeholder=\"Optional: Enter image URL\"\r\n                        type=\"text\"\r\n                    />\r\n                    <Button  onClick={sendTweet} type=\"submit\" className=\"tweetBox__tweetButton\">Tweet</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <TwitterIcon className=\"sidebar__twitterIcon\" />\r\n            <SidebarOption active Icon={HomeIcon} text=\"Home\" />\r\n            <SidebarOption Icon={SearchIcon} text=\"Explore\" />\r\n            <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\r\n            <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\r\n            <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\r\n            <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\r\n            <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\r\n\r\n            <Button onClick={() => setOpen(true)} variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\r\n                Tweet\r\n            </Button>\r\n            <Modal\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\n// this is the data layer\r\nexport const StateContext = createContext();\r\n\r\n//build a provider\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\n//this is how we use it inside of a component\r\nexport const useStateValue = () => useContext(StateContext)","import React, { useState } from 'react'\r\nimport './TweetBox.css'\r\nimport { Avatar, Button } from '@material-ui/core'\r\nimport db from \"../firebase\";\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nfunction TweetBox() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    const [tweetImage, setTweetImage] = useState('');\r\n    const [{user}] = useStateValue()\r\n\r\n    const sendTweet = (e) => {\r\n        e.preventDefault();\r\n\r\n        db.collection(\"posts\").add({\r\n            displayName: user.displayName,\r\n            username: user.displayName,\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            avatar: 'https://img2.freepng.es/20180622/pqa/kisspng-login-computer-icons-download-avatar-icon-5b2cfbf8e8da45.3511932815296747449538.jpg'\r\n        });\r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className='tweetBox'>\r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src='https://img2.freepng.es/20180622/pqa/kisspng-login-computer-icons-download-avatar-icon-5b2cfbf8e8da45.3511932815296747449538.jpg' />\r\n                    <input\r\n                        onChange={(e) => setTweetMessage(e.target.value)}\r\n                        value={tweetMessage}\r\n                        type='text'\r\n                        placeholder=\"What's happening?\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    value={tweetImage}\r\n                    onChange={(e) => setTweetImage(e.target.value)}\r\n                    className=\"tweetBox__imageInput\"\r\n                    placeholder=\"Optional: Enter image URL\"\r\n                    type=\"text\"\r\n                />\r\n                <Button onClick={sendTweet} type=\"submit\" className=\"tweetBox__tweetButton\">Tweet</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox\r\n","import React, {forwardRef} from 'react'\r\nimport './Posts.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nconst Posts = forwardRef(({verified, username, displayName, avatar, image, text}, ref) => {\r\n    const [{user}] = useStateValue()\r\n    console.log(user);\r\n    return (\r\n        <div className='post' ref={ref}>\r\n            <div className='post__avatar'>\r\n                <Avatar src='https://img2.freepng.es/20180622/pqa/kisspng-login-computer-icons-download-avatar-icon-5b2cfbf8e8da45.3511932815296747449538.jpg' />\r\n            </div>\r\n            <div className='post__body'>\r\n                <div className='post__header'>\r\n                    <div className='post__headerText'>\r\n                        <h3>\r\n                            {user.displayName}{' '}\r\n                            <span>\r\n                                {verified && <VerifiedUserIcon className='post__badge' />} @{user.displayName}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className='post__headerDescription'>\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={image} alt='' />\r\n                <div className='post__footer'>\r\n                    <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                    <RepeatIcon fontSize=\"small\" />\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                    <PublishIcon fontSize=\"small\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './Feed.css'\r\nimport TweetBox from './TweetBox'\r\nimport Posts from './Posts'\r\nimport db from '../firebase'\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").onSnapshot((snapshot) =>\r\n            setPosts(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }, []);\r\n    return (\r\n        <div className='feed'>\r\n            <div className=\"feed__header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            <TweetBox />\r\n            <FlipMove>\r\n                {posts.map((post, index) => (\r\n                    <Posts\r\n                        key={index}\r\n                        verified={post.verified}\r\n                        text={post.text}\r\n                        image={post.image}\r\n                    />\r\n                ))}\r\n            </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from \"react\";\r\nimport \"./Widgets.css\";\r\nimport {\r\n  TwitterTimelineEmbed,\r\n  TwitterShareButton,\r\n  TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__input\">\r\n        <SearchIcon className=\"widgets__searchIcon\" />\r\n        <input placeholder=\"Search Twitter\" type=\"text\" />\r\n      </div>\r\n\r\n      <div className=\"widgets__widgetContainer\">\r\n        <h2>What's happening</h2>\r\n\r\n        <TwitterTweetEmbed tweetId={\"1318975841976672260\"} />\r\n\r\n        <TwitterTimelineEmbed\r\n          sourceType=\"profile\"\r\n          screenName=\"freeCodeCamp\"\r\n          options={{ height: 400 }}\r\n        />\r\n\r\n        <TwitterShareButton\r\n          url={\"https://facebook.com/joeylash\"}\r\n          options={{ text: \"#reactjs is awesome\", via: \"maryancgc\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\r\nimport { FormControl, InputLabel, Input, FormHelperText, Button } from '@material-ui/core';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { auth } from '../firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n\r\n    const onSignUp = (e) => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const onSignUp2 = (e) => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then(authUser => {\r\n                authUser.user.updateProfile({\r\n                    displayName: username\r\n                })\r\n                history.push('/home')\r\n            })\r\n            .catch(error => alert(error.message));\r\n        setOpen(false);\r\n    }\r\n\r\n    const onLogIn = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(auth => {\r\n                // Logged in, redirect to homepage\r\n                history.push('/home')\r\n            })\r\n            .catch(e => alert(e.message))\r\n    }\r\n\r\n    const onLogIn2 = () => {\r\n        history.push('/login')\r\n    }\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <form className='login__formModal'>\r\n                <TwitterIcon className='login__twitterIcon2' />\r\n                <Input\r\n                    placeholder='username'\r\n                    type='username'\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder='email'\r\n                    type='text'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Input\r\n                    placeholder='password'\r\n                    type='password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button onClick={onSignUp2} className='login__buttonForm' type='submit'>Sign Up</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(authUser => {\r\n            if(authUser) {\r\n                dispatch({\r\n                    type:'SET_USER',\r\n                    user: authUser\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type:'SET_USER',\r\n                    user: null\r\n                })\r\n            }\r\n        })\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, [username])\r\n\r\n    console.log(user);\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__left'>\r\n                <div className='login__leftTitle'>\r\n                    <SearchIcon />\r\n                    <h2>Follow your interests.</h2>\r\n                </div>\r\n                <div className='login__leftTitle'>\r\n                    <SupervisorAccountIcon/>\r\n                    <h2>Hear what people are talking about.</h2>\r\n                </div>\r\n                <div className='login__leftTitle'>\r\n                    <ModeCommentIcon className='login__modeComment'/>\r\n                    <h2>Join the conversation.</h2>\r\n                </div>\r\n            </div>\r\n            <div className='login__right'>\r\n                <div className='login__form'>\r\n                    <FormControl className='login__formControl'>\r\n                        <InputLabel>Phone, email, or username</InputLabel>\r\n                        <Input\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            type='text'\r\n                            aria-describedby=\"my-helper-text\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className='login__formControl'>\r\n                        <InputLabel>Password</InputLabel>\r\n                        <Input\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            type='password'\r\n                            aria-describedby=\"my-helper-text\"\r\n                        />\r\n                        <FormHelperText id=\"my-helper-text\">Forgot password?</FormHelperText>\r\n                    </FormControl>\r\n                    <Button onClick={onLogIn} type='submit' className='login__button'>Log in</Button>\r\n                </div>\r\n                <TwitterIcon className='login__twitterIcon' />\r\n                <div className='login__rightBody'>\r\n                    <h1>See what’s happening in the world right now</h1>\r\n                    <h2 >Join Twitter today.</h2>\r\n                    <Button onClick={onSignUp} className='login__button1'>Sign up</Button>\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={() => setOpen(false)}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                    >\r\n                        {body}\r\n                    </Modal>\r\n                    <Button onClick={onLogIn2} className='login__button2'>Log in</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './Login2.css'\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport { FormControl, InputLabel, Input, Button } from '@material-ui/core';\r\n\r\nfunction Login2() {\r\n    return (\r\n        <div className='login2'>\r\n            <div className='login2__container'>\r\n                <TwitterIcon className='login2__twitterIcon'/>\r\n                <h2>Log in to Twitter</h2>\r\n                <FormControl className='login2__formControl'>\r\n                    <InputLabel htmlFor=\"my-input\">Phone, email, or username</InputLabel>\r\n                    <Input type='text' aria-describedby=\"my-helper-text\" />\r\n                </FormControl>\r\n                <FormControl className='login2__formControl'>\r\n                    <InputLabel htmlFor=\"my-input\">Password</InputLabel>\r\n                    <Input type='password' aria-describedby=\"my-helper-text\" />\r\n                </FormControl>\r\n                <Button className='login2__button'>Log in</Button>\r\n                <p>\r\n                    <a href='https://twitter.com/account/begin_password_reset'>Forgot password? . Sign up forTwitter</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login2\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Components/Sidebar\";\nimport Feed from \"./Components/Feed\";\nimport Widgets from \"./Components/Widgets\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport Login2 from \"./Components/Login2\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/login\" component={Login2} />\n          <Route\n            exact\n            path=\"/home\"\n            render={() => (\n              <>\n                <Sidebar /> <Feed /> <Widgets />\n              </>\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n    user: null,\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer,{initialState} from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}